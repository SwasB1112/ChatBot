# -*- coding: utf-8 -*-
"""Llama2_Llamaindex.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n-k9dLIeXNYa4STjIYR4yh71uzzj1cnK
"""

import sys

print(sys.version)


from llama_index.core import VectorStoreIndex,SimpleDirectoryReader
from llama_index.llms.huggingface import HuggingFaceLLM
from llama_index.core.prompts.prompts import SimpleInputPrompt

reader = SimpleDirectoryReader(input_dir="data")
documents = reader.load_data()

system_prompt="""
You are a Q&A assistant. Your goal is to answer questions as
accurately as possible based on the instructions and context provided.
"""
## Default format supportable by LLama2
query_wrapper_prompt=SimpleInputPrompt("<|USER|>{query_str}<|ASSISTANT|>")

from huggingface_hub import login
access_token_read = "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"
access_token_write = "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"
login(token = access_token_read)

import torch

llm = HuggingFaceLLM(
    context_window=4096,
    max_new_tokens=256,
    generate_kwargs={"temperature": 0.0, "do_sample": False},
    system_prompt=system_prompt,
    query_wrapper_prompt=query_wrapper_prompt,
    tokenizer_name="meta-llama/Llama-2-7b-chat-hf",
    model_name="meta-llama/Llama-2-7b-chat-hf",
    device_map="auto",
    # uncomment this if using CUDA to reduce memory usage
    model_kwargs={"torch_dtype": torch.float16,
            "load_in_8bit": True,}
)


from langchain_community.embeddings import HuggingFaceEmbeddings
from llama_index.core import ServiceContext
from llama_index.embeddings.langchain import LangchainEmbedding

embed_model=LangchainEmbedding(
    HuggingFaceEmbeddings(model_name="sentence-transformers/all-mpnet-base-v2"))

service_context=ServiceContext.from_defaults(
    chunk_size=1024,
    llm=llm,
    embed_model=embed_model
)

service_context

index  = VectorStoreIndex.from_documents(documents,service_context=service_context)

index

query_engine=index.as_query_engine()

response=query_engine.query("Give me idea on the powers delegated to the Chairman & Managing Director")

print(response)

